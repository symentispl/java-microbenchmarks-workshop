version: '3'

vars:
  ASYNC_PROFILER_DIR: "{{.TASK_DIR}}/.local/async-profiler"
  BENCHMARKS_OUTPUT_DIR: "{{.TASK_DIR}}/target/benchmarks"
  BENCHMARKS_JAR: "target/benchmarks.jar"

tasks:

  download-async-profiler:
    desc: "Install async-profiler"
    vars:
      ASYNC_PROFILER_VERSION: "4.1"
      ASYNC_PROFILER_LINUX_X86_URL: "https://github.com/async-profiler/async-profiler/releases/download/v{{.ASYNC_PROFILER_VERSION}}/async-profiler-{{.ASYNC_PROFILER_VERSION}}-linux-x64.tar.gz"
      ASYNC_PROFILER_LINUX_X86_ARCHIVE: "async-profiler-{{.ASYNC_PROFILER_VERSION}}-linux-x64.tar.gz"
      ASYNC_PROFILER_MACOS_URL: "https://github.com/async-profiler/async-profiler/releases/download/v{{.ASYNC_PROFILER_VERSION}}/async-profiler-{{.ASYNC_PROFILER_VERSION}}-macos.zip"
      ASYNC_PROFILER_MACOS_ARCHIVE: "async-profiler-{{.ASYNC_PROFILER_VERSION}}-macos.zip"
      VERSION_FILE: "{{.ASYNC_PROFILER_DIR}}/.version"
    cmds:
      - cmd: |
          curl -L -o {{.ASYNC_PROFILER_LINUX_X86_ARCHIVE}} {{.ASYNC_PROFILER_LINUX_X86_URL}}
          rm -rf {{.ASYNC_PROFILER_DIR}}
          mkdir -p {{.ASYNC_PROFILER_DIR}}
          tar xzf {{.ASYNC_PROFILER_LINUX_X86_ARCHIVE}} --strip-components=1 -C {{.ASYNC_PROFILER_DIR}}
          echo "{{.ASYNC_PROFILER_VERSION}}" > {{.VERSION_FILE}}
          rm {{.ASYNC_PROFILER_LINUX_X86_ARCHIVE}}
        platforms: [linux]
        generates: "{{.ASYNC_PROFILER_DIR}}/lib/libasyncProfiler.so"
      - cmd: |
          curl -L -o {{.ASYNC_PROFILER_MACOS_ARCHIVE}} {{.ASYNC_PROFILER_MACOS_URL}}
          rm -rf {{.ASYNC_PROFILER_DIR}}
          mkdir -p {{.ASYNC_PROFILER_DIR}}
          unzip {{.ASYNC_PROFILER_MACOS_ARCHIVE}} -d {{.ASYNC_PROFILER_DIR}}
          mv {{.ASYNC_PROFILER_DIR}}/async-profiler-{{.ASYNC_PROFILER_VERSION}}-macos/* {{.ASYNC_PROFILER_DIR}}/
          rmdir {{.ASYNC_PROFILER_DIR}}/async-profiler-{{.ASYNC_PROFILER_VERSION}}-macos
          echo "{{.ASYNC_PROFILER_VERSION}}" > {{.VERSION_FILE}}
          rm {{.ASYNC_PROFILER_MACOS_ARCHIVE}}
        platforms: [darwin]
        generates: "{{.ASYNC_PROFILER_DIR}}/lib/libasyncProfiler.dylib"
    status:
      - test -f "{{.VERSION_FILE}}" && test "$(cat {{.VERSION_FILE}})" = "{{.ASYNC_PROFILER_VERSION}}"
  build:
    desc: "Build all modules with Maven"
    cmds:
      - cmd: ./mvnw --batch-mode --update-snapshots clean verify
        platforms: [linux, darwin]
      - cmd: cmd /c "mvnw.cmd --batch-mode --update-snapshots clean verify"
        platforms: [windows]
    sources:
      - "pom.xml"
      - "**/src/main/java/**"
      - "**/src/test/java/**"
    generates:
      - "**/target/classes/**"
      - "**/target/test-classes/**"
      - "{{.BENCHMARKS_JAR}}"
  run-benchmarks:
    desc: "Run benchmarks (use '-- [benchmark name]' to run selected benchmarks)"
    deps:
      - build
    cmds:
      - java -jar {{.BENCHMARKS_JAR}} "{{.CLI_ARGS}}" -wi 3 -i 5 -f 1
  profile-benchmarks:
    desc: "Profile benchmarks using async-profiler (of JFR under Windows) (use '-- [benchmark name]' to run selected benchmarks)"
    deps:
      - download-async-profiler
      - build
    cmds:
      - cmd: java -jar {{.BENCHMARKS_JAR}} {{.CLI_ARGS}} -wi 5 -i 5 -f 1 -prof "async:libPath={{.ASYNC_PROFILER_DIR}}/lib/libasyncProfiler.so;output=flamegraph;event=cpu;dir={{.BENCHMARKS_OUTPUT_DIR}}"
        platforms: [ linux ]
      - cmd: java -jar {{.BENCHMARKS_JAR}} {{.CLI_ARGS}} -wi 5 -i 5 -f 1 -prof "async:libPath={{.ASYNC_PROFILER_DIR}}/lib/libasyncProfiler.dylib;output=flamegraph;event=cpu;dir={{.BENCHMARKS_OUTPUT_DIR}}"
        platforms: [ darwin ]
      - cmd: java -jar {{.BENCHMARKS_JAR}} {{.CLI_ARGS}} -wi 5 -i 5 -f 1 -prof "jfr:dir={{.BENCHMARKS_OUTPUT_DIR}}"
        platforms: [ windows ]